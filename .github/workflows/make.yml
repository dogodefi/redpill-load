name: Make kernel bs patch

on:
  workflow_dispatch:
    inputs:
      dsmodel:
        description: 'Input Full DSM model [DS3622xs+|RS4021xs+|DVA3221|DS918+|DS920+|DS3615xs]'
        required: true
        default: 'DS3622xs+'
      os_version:
        description: 'Must build DSM7.1 and after DSM versions'
        required: true
        default: '42621'
      toolchain:
        description: 'DSM toolchain URL for repack zImage'
        required: true
        default: 'https://downloads.sourceforge.net/project/dsgpl/Tool%20Chain/DSM%207.0.0%20Tool%20Chains/Intel%20x86%20Linux%204.4.180%20%28Broadwellnk%29/broadwellnk-gcc750_glibc226_x86_64-GPL.txz'

      linux-src:
        description: 'Linux kernel source URL for repack zImage'
        required: true
        default: 'https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.180.tar.xz'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop
      - name: Bulid
        id: bulid-bsp
        env:
            ACTIONS_STEP_DEBUG: true
        run: |
          dsmodel=${{github.event.inputs.dsmodel}}
          os_version=${{github.event.inputs.os_version}}
          pat_address="https://global.download.synology.com/download/DSM/release/7.1/"${os_version}"/DSM_"${dsmodel}"_"${os_version}".pat"
          patfile=$(basename ${pat_address} | while read; do echo -e ${REPLY//%/\\x}; done)
          echo "::set-output name=patfile::$patfile"
          # install bsdiff
          sudo apt-get install -y bsdiff cpio xz-utils

          #ls -al $GITHUB_WORKSPACE/
          mkdir /opt/build
          mkdir /opt/dist
          cd /opt/build
          curl -L ${pat_address} -o ds.pat
          curl -L ${{github.event.inputs.toolchain}} -o toolchain.txz
          curl -L ${{github.event.inputs.linux-src}} -o linux.tar.xz
          
          # download old pat for syno_extract_system_patch # thanks for jumkey's idea.
          mkdir synoesp
          curl --location https://global.download.synology.com/download/DSM/release/7.0.1/42218/DSM_DS3622xs%2B_42218.pat --output oldpat.tar.gz

          tar -C./synoesp/ -xf oldpat.tar.gz rd.gz
          cd synoesp
          xz -dc < rd.gz >rd 2>/dev/null || echo "extract rd.gz"
          echo "finish"
          cpio -idm <rd 2>&1 || echo "extract rd"
          mkdir extract && cd extract
          cp ../usr/lib/libcurl.so.4 ../usr/lib/libmbedcrypto.so.5 ../usr/lib/libmbedtls.so.13 ../usr/lib/libmbedx509.so.1 ../usr/lib/libmsgpackc.so.2 ../usr/lib/libsodium.so ../usr/lib/libsynocodesign-ng-virtual-junior-wins.so.7 ../usr/syno/bin/scemd ./
          ln -s scemd syno_extract_system_patch
          cd ../..
          mkdir pat
          #tar xf ds.pat -C pat
          ls -lh ./
          sudo LD_LIBRARY_PATH=synoesp/extract synoesp/extract/syno_extract_system_patch ds.pat pat || echo "extract latest pat"
          echo "test4"
          # is update_pack
          if [ ! -f "pat/zImage" ]; then
            cd pat
            ar x $(ls flashupdate*)
            tar xf data.tar.xz
            cd ..
          fi
          echo "test5"
          mkdir toolchain
          tar xf toolchain.txz -C toolchain
          mkdir linux-src
          tar xf linux.tar.xz --strip-components 1 -C linux-src

          # extract vmlinux
          ./linux-src/scripts/extract-vmlinux pat/zImage > vmlinux
          # sha256
          zlinux_sha256=`sha256sum pat/zImage`; echo ${zlinux_sha256} >> checksum.sha256
          ramdisk_sha256=`sha256sum pat/rd.gz`; echo ${ramdisk_sha256} >> checksum.sha256
          vmlinux_sha256=`sha256sum vmlinux`; echo ${vmlinux_sha256} >> checksum.sha256
          # patch vmlinux
          # vmlinux_mod.bin
          curl -L https://github.com/jumkey/dsm-research/raw/master/tools/common.php -o common.php
          curl -L https://github.com/jumkey/dsm-research/raw/master/tools/patch-ramdisk-check.php -o patch-ramdisk-check.php
          curl -L https://github.com/jumkey/dsm-research/raw/master/tools/patch-boot_params-check.php -o patch-boot_params-check.php
          php patch-boot_params-check.php vmlinux vmlinux-mod
          php patch-ramdisk-check.php vmlinux-mod vmlinux_mod.bin

          git clone https://github.com/kiler129/recreate-zImage.git
          chmod +x recreate-zImage/rebuild_kernel.sh
          cd linux-src
          # ---------- make zImage_mod
          # Make file more anonymous
          export KBUILD_BUILD_TIMESTAMP="1970/1/1 00:00:00"
          export KBUILD_BUILD_USER="root"
          export KBUILD_BUILD_HOST="localhost"
          export KBUILD_BUILD_VERSION=0

          export ARCH=x86_64
          export CROSS_COMPILE=/opt/build/toolchain/x86_64-pc-linux-gnu/bin/x86_64-pc-linux-gnu-
          #make olddefconfig
          make defconfig
          # change to lzma
          sed -i 's/CONFIG_KERNEL_GZIP=y/# CONFIG_KERNEL_GZIP is not set/' .config
          sed -i 's/# CONFIG_KERNEL_LZMA is not set/CONFIG_KERNEL_LZMA=y/' .config
          << see_below
          make clean
          sed -i 's/bzImage: vmlinux/bzImage: /' arch/x86/Makefile
          make vmlinux -j4 || true # make some *.o inspire by UnknowO
          cp ../vmlinux_mod.bin vmlinux # vmlinux_mod.bin is already stripped of debugging and comments, strippe again should be ok
          make bzImage
          sed -i 's/bzImage: /bzImage: vmlinux/' arch/x86/Makefile
          cp arch/x86/boot/bzImage ../zImage_mod
          make clean
          see_below
          # for DS3615xs
          #sed -i 's/   -std=gnu89$/   -std=gnu89 $(call cc-option,-fno-PIE)/' Makefile
          sed -i 's/ ld -/ ${CROSS_COMPILE}ld -/' ../recreate-zImage/rebuild_kernel.sh
          sed -i 's/(ld -/(${CROSS_COMPILE}ld -/' ../recreate-zImage/rebuild_kernel.sh
          sed -i 's/ gcc / ${CROSS_COMPILE}gcc /' ../recreate-zImage/rebuild_kernel.sh
          sed -i 's/ nm / ${CROSS_COMPILE}nm /' ../recreate-zImage/rebuild_kernel.sh
          sed -i 's/ objcopy / ${CROSS_COMPILE}objcopy /' ../recreate-zImage/rebuild_kernel.sh
          sed -i 's/(objdump /(${CROSS_COMPILE}objdump /' ../recreate-zImage/rebuild_kernel.sh
          sed -i 's/ readelf / ${CROSS_COMPILE}readelf /' ../recreate-zImage/rebuild_kernel.sh
          ../recreate-zImage/rebuild_kernel.sh $PWD/../linux-src ../vmlinux_mod.bin ../zImage_mod
          # ----------
          cd ..
          bsdiff pat/zImage zImage_mod diff.bsp

          echo '---copy file---'
          cp vmlinux /opt/dist
          cp vmlinux_mod.bin /opt/dist
          cp diff.bsp /opt/dist
          cp checksum.sha256 /opt/dist
          echo '---END---'
      - name: commit
        run: |
          dsmodel=${{github.event.inputs.dsmodel}}
          os_version=${{github.event.inputs.os_version}}
          mkdir -p config/${dsmodel}/7.1.0-${os_version} && cd config/${dsmodel}/7.1.0-${os_version}
          cp ../template/config.json ./
          sed -i "s/os_version_template/${os_version}/g; s/zlinux_sha256/${zlinux_sha256}/g; s/ramdisk_sha256/${ramdisk_sha256}/g; s/vmlinux_sha256/${vmlinux_sha256}/g" config.json
          cp /opt/dist/diff.bsp zImage-001-${dsmodel}-${os_version}-ramdisk-and-header.bsp
          git config --global user.email anonymous@gmail.com
          git config --global user.name anonymous
          git add .
          git commit -m "update config ${dsmodel}/7.1.0-${os_version}" -a     
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
         github_token: ${{ secrets.GITHUB_TOKEN }}     
         branch: "develop"
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: kernel bs patch for ${{ steps.bulid-bsp.outputs.patfile }}
          path: /opt/dist
